#!/usr/bin/env python3 
import os
import re
import subprocess  


loopdevstart = 40 
blockdevloop ="/dev/loop"+str(loopdevstart) 

#
#
# *********** Optimized for my system.  **************** 
# 
#

if os.environ['USER'] != 'rpease': 
   print("Meant only as a guide. Please do not run unless you are me. :)")
   exit(1) 


# Make 10 MB img file full of zeros 
def make_blank_image_with_partitions(diskname): 
  os.system("dd if=/dev/zero of="+diskname+" count="+str(500*1024*2))
  os.system("sgdisk "+diskname+" -n 1:2048:200MB -n 2:0:+10MB -n 3:0:+9MB -t 1:ef02")


#
#
#
#
def get_partitions(diskname): 
  result = []   
  partitions = subprocess.check_output(["sgdisk","-p",diskname]).decode().split('\n')
  found_name = False
  for line in partitions:
    if found_name:
        print(line)
        line = re.sub(" *$","",re.sub("^ *","",line)) 
        line = re.sub(" +"," ",line) 
        if len(line) > 10: 
            result.append([int(re.sub(' +',' ',x)) for x in line.split(' ')[0:3]])
    if re.match("^Number",line):
      found_name = True
  if not found_name:
     raise(Exception("Could not find Number line in sgdisk output"))
  return result 

def cleandisks():
    if os.path.exists("/tmp/grubdisk"):
        os.system("sudo umount /tmp/grubdisk; rm -rf /tmp/grubdisk") 
    if os.path.exists("/tmp/grubdisk_p1"):
        os.system("sudo umount /tmp/grubdisk_p1; rm -rf /tmp/grubdisk_p1") 
    if os.path.exists("/tmp/grubdisk_p2"):
        os.system("sudo umount /tmp/grubdisk_p2; rm -rf /tmp/grubdisk_p2") 
    if os.path.exists("/tmp/grubdisk_p3"):
        os.system("sudo umount /tmp/grubdisk_p3; rm -rf /tmp/grubdisk_p3") 
    os.system("sudo losetup -d /dev/loop40") 
    os.system("sudo losetup -d /dev/loop41") 
    os.system("sudo losetup -d /dev/loop42") 
    os.system("sudo losetup -d /dev/loop43") 
     
def setupblockdev():    
    os.system("mkdir /tmp/grubdisk") 
    os.system("sudo losetup " +blockdevloop + ' ' +imgfile)
       
def setuppartitions(partitions,imgfile):    
    for i,v in enumerate(partitions): 
       i += 1 
       grubdisk = "/tmp/grubdisk_p"+str(i) 
       os.system("mkdir "+grubdisk) 
       os.system("sudo losetup --offset "+str((v[1])*512)+                \
                        " --sizelimit " + str((v[2]-v[1]+1)*512) +      \
                        " /dev/loop"+str(i+loopdevstart) + ' ' +imgfile  \
                         )
       
       os.system("sudo mkfs.fat -F32 /dev/loop"+str(i+loopdevstart)) 
       os.system("sudo mount -o user=1000 /dev/loop"+str(i+loopdevstart)+ " " +grubdisk)
       os.system("sudo chown -R rpease:rpease "+grubdisk)

def installgrub():
    os.system("sudo grub-install --root-directory=/tmp/grubdisk_p1 --no-floppy /dev/loop40") 

def installimage():
    os.system("mkdir -p /tmp/grubdisk_p1/boot/grub")
    os.system("sudo cp /boot/vmlinuz /tmp/grubdisk_p1/boot/grub")
    os.system("sudo cp /boot/initrd.img /tmp/grubdisk_p1/boot/grub")
    os.system("sudo chown rpease:rpease /tmp/grubdisk_p1/boot/grub/*")
    with open("/tmp/grubdisk_p1/boot/grub/device.map",'w') as fp: 
        fp.write("(hd0)   /dev/loop40\n") 

if __name__ == "__main__": 
   
    imgfile = "mydisk.img"
    make_blank_image_with_partitions(imgfile)
    partitions = get_partitions(imgfile) 
    # [['1', '2048', '32768', '15.0', 'MiB', '8300'], ['2', '34816', '36863', '1024.0', 'KiB', '8300'], ['3', '36864', '55295', '9.0', 'MiB', '8300']]

    cleandisks()
    # after this you should be able to go to /tmp/grubdisk_p1/2/3 and load files onto it. 

    setupblockdev()
    setuppartitions(partitions,imgfile)    
    installimage()
    installgrub()
    
